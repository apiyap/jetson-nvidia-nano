<VirtualHost *:8080>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	ServerName ist.common.local

	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/ist_common
        <Directory "/var/www/ist_common">
          AllowOverride All
          Allow from All
        </Directory>
	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf
########################################################################3

#                SSLProxyEngine On
#                SSLProxyVerify none
#                SSLProxyCheckPeerCN off
#                SSLProxyCheckPeerName off
#                SSLProxyCheckPeerExpire off
                
                ProxyPreserveHost on

                ProxyRequests off
                ProxyVia on      

                <Proxy *>
                  Order deny,allow
                  Allow from all
                </Proxy>

                <Location /socket.io>
              
                    RewriteEngine on
                    RewriteCond %{HTTP:UPGRADE} ^WebSocket$ [NC]
                    RewriteCond %{HTTP:CONNECTION} Upgrade$ [NC]
                    RewriteRule .* ws://localhost:9090%{REQUEST_URI} [P,L]

                    ProxyPass ws://localhost:9090/  retry=0 keepalive=On
                    ProxyPassReverse ws://localhost:9090/

                   #Require all granted
                   #ProxyPass "wss://127.0.0.1:9090/"
                   #ProxyPassReverse "wss://127.0.0.1:9090/"
                   #ProxyPassReverseCookieDomain 127.0.0.1 ist.common.local
                </Location>
                <Location /stream>

                    RewriteEngine on
                    #RewriteCond %{HTTP:UPGRADE} ^WebSocket$ [NC]
                    #RewriteCond %{HTTP:CONNECTION} Upgrade$ [NC]
                    RewriteRule .* http://127.0.0.1:9999%{REQUEST_URI} [P,L]

                    ProxyPass http://127.0.0.1:9999/  retry=0 keepalive=On
                    ProxyPassReverse http://127.0.0.1:9999/

                </Location>



                <Location />
                   Require all granted
                   ProxyPassReverse https://127.0.0.1:8080/
                   ProxyPassReverseCookieDomain 127.0.0.1 ist.common.local
                </Location>
# Result:
# Client: 
# Server: work only ws://localhost:9090/
# 
####################################################################



</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
